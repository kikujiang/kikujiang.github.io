<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dream Maker</title>
  <subtitle>因上努力，果上随缘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kikujiang.github.io/"/>
  <updated>2016-05-06T16:28:16.518Z</updated>
  <id>http://kikujiang.github.io/</id>
  
  <author>
    <name>kikujiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android测试之旅（一）</title>
    <link href="http://kikujiang.github.io/2016/05/07/2016050701/"/>
    <id>http://kikujiang.github.io/2016/05/07/2016050701/</id>
    <published>2016-05-06T16:08:14.000Z</published>
    <updated>2016-05-06T16:28:16.518Z</updated>
    
    <content type="html">&lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;随着移动互联网的发展，越来越多的开发者投入到了Android的开发怀抱中。日益增多的app晃得我们眼花缭乱。各种无法预料的崩溃让开发者投入到一天又一天无奈而又漫长的加班中。最近公司让我研究Android测试相关方面的内容，之前待过的一些公司基本都是快速开发，没有什么时间让你来搞测试这块的内容，自己虽然一直很感兴趣，但是始终没有去做过一些深入的了解和调研，正好趁着这次机会，好好的整理整理。Android应用层和我们接触最多的还是java语言，说到java语言，我们就不得不提到JUnit测试框架。&lt;/p&gt;
&lt;h1 id=&quot;JUnit&quot;&gt;&lt;a href=&quot;#JUnit&quot; class=&quot;headerlink&quot; title=&quot;JUnit&quot;&gt;&lt;/a&gt;JUnit&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;现在最新的JUnit版本是4.12版本。我们的示例也是在此基础上进行讲解的。因为我们在开发中大部分的应用逻辑都会用java来写，而且现在市面上种种的框架都会把逻辑层和展示层给分离出来，JUnit这时候就可以发挥出自己的优势出来。当然，JUnit主要还是我们开发者用来自测代码的。跟上时代的潮流，我就用Android Studio来进行编写。&lt;/p&gt;
&lt;h2 id=&quot;文件配置&quot;&gt;&lt;a href=&quot;#文件配置&quot; class=&quot;headerlink&quot; title=&quot;文件配置&quot;&gt;&lt;/a&gt;文件配置&lt;/h2&gt;&lt;p&gt;下面来看下JUnit的文件夹位置。&lt;br&gt;&lt;img src=&quot;http://7pulyj.com1.z0.glb.clouddn.com/location.png&quot; alt=&quot;文件位置&quot;&gt;&lt;br&gt;千万不要忘了在build.gradle文件中引入JUnit的依赖。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;testCompile &#39;junit:junit:4.12&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;注解说明&quot;&gt;&lt;a href=&quot;#注解说明&quot; class=&quot;headerlink&quot; title=&quot;注解说明&quot;&gt;&lt;/a&gt;注解说明&lt;/h2&gt;&lt;p&gt;我们继续来看JUnit的注解说明。&lt;br&gt;| 名称 | 作用 |&lt;br&gt;|:—|:—|&lt;br&gt;|@Test|说明了该方法需要测试|&lt;br&gt;|@Before|该方法在每次测试方法调用前都会调用|&lt;br&gt;|@BeforeClass|该方法在所有测试方法之前调用，只会被调用一次|&lt;br&gt;|@After|该方法在每次测试方法调用后都会调用|&lt;br&gt;|@AfterClass|该方法在所有测试方法之后调用，只会被调用一次|&lt;br&gt;|@Ignore|忽略该方法|&lt;br&gt;为了形象的展示各个方法的调用顺序，我们来写个代码测试一下。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JUnitLifeCycle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method init called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@BeforeClass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareDataForTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method prepareDataForTest called------\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method test1 called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method test2 called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method test3 called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearDataForTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method clearDataForTest called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@AfterClass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;------method finish called------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码很简单，就是将这几个不同的注解对应的方法进行打印，看下打印结果:&lt;br&gt;&lt;img src=&quot;http://7pulyj.com1.z0.glb.clouddn.com/lifecycle.png&quot; alt=&quot;方法调用顺序&quot;&gt;&lt;br&gt;这样就看的很清楚了。知道了这个顺序之后，我们就可以很方便的编写我们的测试用例了。当我们写了多个测试用例，可以右击文件夹直接运行文件夹下所有用例。但是，假如我们已经写好了多个测试用例，每次只需要测试其中的三四个，而不需要把所有的测试用例都跑一遍，这该怎么办呢？不用担心，JUnit已经为我们提供了方法。假设有三个写好的测试用例，我们只需要调用其中的两个，就可以这么做:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Suite&lt;/span&gt;.SuiteClasses(&amp;#123;FirstTest.class,ThirdTest.class&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SpecializedTests&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们只需运行SpecializedTests这个文件就可以将我们指定的测试用例进行测试了。&lt;/p&gt;
&lt;h2 id=&quot;测试内容&quot;&gt;&lt;a href=&quot;#测试内容&quot; class=&quot;headerlink&quot; title=&quot;测试内容&quot;&gt;&lt;/a&gt;测试内容&lt;/h2&gt;&lt;p&gt;知道了一些基本的注解用途之后，下面到了关键的部分了。我们该如何测试？Assert这个类解决了我们的问题。再来看一个小例子:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testFirstTestPrint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FirstTest tester= &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FirstTest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String expected = &lt;span class=&quot;string&quot;&gt;&quot;Hello JUnit&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String result = tester.print();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    assertEquals(expected,result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里写的比较简单，大体上的意思就是我们在方法中先定义一个期望值，然后调用需要测试的方法，这里就是测试FirstTest类中的print方法。当我们遇到异常捕获的方法该如何测试呢？不用担心，我们这里继续来举个小例子。先看需要测试的方法:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;printWithDanger&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NullPointerException();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello JUnit&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;正常的测试用例就和上面的一样，这里不再阐述，接下来我们来测试这个异常的情况，继续看代码:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(expected = NullPointerException.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testException&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FirstUtil tester= &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FirstUtil();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String expected = &lt;span class=&quot;string&quot;&gt;&quot;Hello JUnit&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String result = tester.printWithDanger(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertEquals(expected,result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果这样写，那么测试方法也是绿条完美通过。但是有的时候当你不确定是什么异常时，希望打出该异常的信息，就可以这样来写:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testException&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FirstUtil tester= &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FirstUtil();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String expected = &lt;span class=&quot;string&quot;&gt;&quot;Hello JUnit&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String result = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = tester.printWithDanger(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fail(&lt;span class=&quot;string&quot;&gt;&quot;exception is:&quot;&lt;/span&gt;+e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertEquals(expected,result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就可以帮你打印出错误具体信息，如下所示:&lt;br&gt;&lt;img src=&quot;http://7pulyj.com1.z0.glb.clouddn.com/exception.png&quot; alt=&quot;错误信息展示&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;未完待续…&quot;&gt;&lt;a href=&quot;#未完待续…&quot; class=&quot;headerlink&quot; title=&quot;未完待续…&quot;&gt;&lt;/a&gt;未完待续…&lt;/h1&gt;&lt;p&gt;今天就简单的介绍到这里，下次博主会介绍一些JUnit方面一些更好玩的注解和多样的方式。希望各位做个好梦，晚安。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于JUnit的使用
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android测试之旅,JUnit" scheme="http://kikujiang.github.io/tags/Android%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%97%85-JUnit/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记之UML的学习(一)</title>
    <link href="http://kikujiang.github.io/2015/04/21/notes_start_uml_20150422/"/>
    <id>http://kikujiang.github.io/2015/04/21/notes_start_uml_20150422/</id>
    <published>2015-04-21T00:02:55.000Z</published>
    <updated>2015-04-22T01:33:17.068Z</updated>
    
    <content type="html">&lt;p&gt;#前言&lt;br&gt;以前一直想学习UML的，主要菜主觉得比较高端。这段时间也去稍微了解了下，带着学了玩玩呗。&lt;/p&gt;
&lt;p&gt;#UML准备&lt;br&gt;UML (Unified Modeling Language)为面向对象软件设计提供统一的、标准的、可视化的建模语言。适用于描述以用例为驱动，以体系结构为中心的软件设计的全过程。一般我们在整个开发工程中少不了对UML的使用。无论是在需求设计，还是我们在编写代码和接口的时候，UML语言都能很形象的展示我们所需要表达的内容。UML的定义包括UML语义和UML表示法两个部分。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;UML语义&lt;/strong&gt;：UML对语义的描述使开发者能在语义上取得一致认识，消除了因人而异的表达方法所造成的影响。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UML表示法&lt;/strong&gt;：UML表示法定义UML符号的表示法，为开发者或开发工具使用这些图形符号和文本语法为系统建模提供了标准。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#UML知识点&lt;br&gt;通常，UML模型图由三种元素构成，他们分别是事物(Things)，关系(Relationships)以及图(Diagrams)。下面我们来一一了解。&lt;/p&gt;
&lt;p&gt;##UML事物&lt;br&gt;UML事物中包含四项，他们分别是构建事物，行为事物，分组事物和注释事物。&lt;/p&gt;
&lt;p&gt;###构建事物&lt;br&gt;构建事物是UML模型图的静态部分，用来描述概念或者物理元素。主要包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;类&lt;/strong&gt;：具有相同属性相同操作 相同关系相同语义的对象的描述&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;接口&lt;/strong&gt;：描述元素的外部可见行为，即服务集合的定义说明 &lt;/p&gt;
&lt;p&gt; &lt;strong&gt;协作&lt;/strong&gt;：描述了一组事物间的相互作用的集合&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;用例&lt;/strong&gt;：代表一个系统或系统的一部分行为，是一组动作序列的集合&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;构件&lt;/strong&gt;：系统中物理存在，可替换的部件&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;节点&lt;/strong&gt;：运行时存在的物理元素&lt;br&gt;这些基本的类型还会引申一些变体。比如：参与者、信号应用、文档库、页表等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###行为事物&lt;br&gt;行为事物是UML模型图的动态部分，描述跨越空间和时间的行为。主要包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;交互&lt;/strong&gt;：实现某功能的一组构件事物之间的消息的集合，涉及消息、动作序列、链接&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;状态机&lt;/strong&gt;：描述事物或交互在生命周期内响应事件所经历的状态序列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###分组事物&lt;br&gt;分组事物是UML模型图的组织部分，描述事物的组织结构，主要包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;包&lt;/strong&gt;：把元素组织成组的机制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###注释事物&lt;br&gt;注释事物是UML模型的解释部分，用来对模型中的元素进行说明，解释。主要包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;注解&lt;/strong&gt;：对元素进行约束或解释的简单符号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;##UML关系&lt;br&gt;之前我们了解了UML事物，现在我们继续来看。UML关系主要分为四类，他们分别是依赖，关联，泛化和实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;依赖(dependency)是两个事物之间的语义关系，其中一个事物(独立事物)发生变化，会影响到另一个事物(依赖事物)的语义&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关联(association)是一种结构关系，它指明一个事物的对象与另一个事物的对象间的联系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;泛化(generalization)是一种特殊/一般的关系。也可以看作是常说的继承关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现(realization)是类元之间的语义关系，其中的一个类元指定了由另一个类元保证执行的协议&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##UML图&lt;br&gt;UML图主要就是形象的让我们理解各个UML事物之间的关系，从而对软件的构造和开发能够融会贯通。下面我们简单的来看下。&lt;/p&gt;
&lt;p&gt;###用例图(Use Case Diagram)&lt;br&gt;用例图是从用户角度描述系统功能， 是用户所能观察到的系统功能的模型图，用例是系统中的一个功能单元。&lt;/p&gt;
&lt;p&gt;###类图(Class Diagram)&lt;br&gt;类图描述系统中类的静态结构。不仅定义系统中的类，表示类之间的联系如关联、依赖、聚合等，也包括类的内部结构(类的属性和操作)。类图是以类为中心来组织的，类图中的其他元素或属于某个类或与类相关联。  &lt;/p&gt;
&lt;p&gt;###对象图(Object Diagram)&lt;br&gt;对象图是类图的实例，几乎使用与类图完全相同的标识。他们的不同点在于对象图显示类的多个对象实例，而不是实际的类。&lt;/p&gt;
&lt;p&gt;###顺序图(Sequence Diagram)&lt;br&gt;顺序图是显示对象之间的动态合作关系，它强调对象之间消息发送的顺序，同时显示对象之间的交互。顺序图的一个用途是用来表示用例中的行为顺序。当执行一个用例行为时，顺序图中的每条消息对应了一个类操作或引起状态转换的触发事件。 &lt;/p&gt;
&lt;p&gt;###协作图(Collaboration Diagram)&lt;br&gt;协作图是用来描述对象间的协作关系，协作图跟顺序图相似，显示对象间的动态合作关系。除显示信息交换外，协作图还显示对象以及它们之间的关系。协作图的一个用途是表示一个类操作的实现。&lt;/p&gt;
&lt;p&gt;###状态图(State Chart Diagram)&lt;br&gt;状态图是一个类对象所可能经历的所有历程的模型图。状态图由对象的各个状态和连接这些状态的转换组成。 &lt;/p&gt;
&lt;p&gt;###活动图(Activity Diagram)&lt;br&gt;活动图是状态图的一个变体，用来描述执行算法的工作流程中涉及的活动。活动图描述了一组顺序的或并发的活动。&lt;/p&gt;
&lt;p&gt;###构件图(Component Diagram)&lt;br&gt;构件图为系统的构件建模型—构件即构造应用的软件单元—还包括各构件之间的依赖关系，以便通过这些依赖关系来估计对系统构件的修改给系统可能带来的影响。&lt;/p&gt;
&lt;p&gt;###部署图(Deployment Diagram)&lt;br&gt;部署视图描述位于节点实例上的运行构件实例的安排。节点是一组运行资源，如计算机、设备或存储器。这个视图允许评估分配结果和资源分配&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;#总结&quot;&gt;&lt;/a&gt;#总结&lt;/h2&gt;&lt;p&gt;第一部分先总结这些东西，下面逐步慢慢深入各种类型的图的详细过程。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于UML建模语言的学习
    
    </summary>
    
      <category term="Notes" scheme="http://kikujiang.github.io/categories/Notes/"/>
    
    
      <category term="UML" scheme="http://kikujiang.github.io/tags/UML/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(六)</title>
    <link href="http://kikujiang.github.io/2015/04/17/notesofandroid20150417/"/>
    <id>http://kikujiang.github.io/2015/04/17/notesofandroid20150417/</id>
    <published>2015-04-17T02:16:33.000Z</published>
    <updated>2015-04-20T08:50:53.891Z</updated>
    
    <content type="html">&lt;p&gt;#前言&lt;br&gt;最近没啥事，准备好好一下补充自己的基础。因为一些工具以及一些功能了解是了解，但是如果深究的话，自己才发现懂得甚至连皮毛都算不上。准备先从View开始一步一步慢慢深入，期间自己也做一些总结和尝试。&lt;/p&gt;
&lt;h1 id=&quot;关于Android中的onkeydown-方法的知识&quot;&gt;&lt;a href=&quot;#关于Android中的onkeydown-方法的知识&quot; class=&quot;headerlink&quot; title=&quot;关于Android中的onkeydown()方法的知识&quot;&gt;&lt;/a&gt;关于Android中的onkeydown()方法的知识&lt;/h1&gt;&lt;p&gt;昨天晚些的时候，因为想起来之前做的按两次退出app的简单功能。昨天在&lt;code&gt;onkeydown()&lt;/code&gt;方法里面，发现不起作用了。先看原来成功运行的代码:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchKeyEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;dispatchKeyEvent method is invoked--------------------------start &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(event.getAction() == KeyEvent.ACTION_DOWN &amp;amp;&amp;amp; event.getKeyCode() == KeyEvent.KEYCODE_BACK)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((System.currentTimeMillis() - lastTime) &amp;gt; &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastTime = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;再按一次退出程序&quot;&lt;/span&gt;,Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;dispatchKeyEvent method is invoked--------------------------end &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.dispatchKeyEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在&lt;code&gt;dispatchKeyEvent()&lt;/code&gt;方法中这样写是可以实现两次退出程序的功能。菜主自己重写的时候也没在意，就把这个方法写到&lt;code&gt;onkeydown()&lt;/code&gt;方法中去了，结果令菜主有点小意外，居然按一次返回键就返回了。网上搜一些相关的资料，未果。所以追本溯源，去官方文档上去看看。&lt;/p&gt;
&lt;p&gt;##dispatchKeyEvent()&lt;br&gt;官方说明我们可以在其他点击事件被分发到窗口前，通过重写该方法来阻截所有的点击事件，返回true的时候表示已被处理。菜主的理解就是有点向触摸事件中的&lt;code&gt;dispatchTouchEvent()&lt;/code&gt;方法一样，如果在这一步就把逻辑写好了，那么接下来就不在进行其他的处理了。菜主比较笨，就打了个log看了下:&lt;br&gt;&lt;img src=&quot;http://powinandroid.qiniudn.com/log_dispatchevent.jpg?imageView2/1/q/85|watermark/2/text/cG93aW5hbmRyb2lk/font/5a6L5L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;&quot;&gt;&lt;br&gt;菜主发现，果然和文档说的一样，开始和结束都执行了&lt;code&gt;dispatchTouchEvent()&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;##onkeydown()&lt;br&gt;官方文档对该方法的解释是，如果activity中的view有自己的&lt;code&gt;onkeydown()&lt;/code&gt;方法，那么就不会调用我们写在activity中的方法。只有都是默认的，才会调用此方法。这里菜主上面方法中的代码移到&lt;code&gt;onkeydown()&lt;/code&gt;事件中去，也打出log进行观察了一番，如图所示:&lt;img src=&quot;http://powinandroid.qiniudn.com/log_onkeydown_log.jpg?imageView2/1/q/85|watermark/2/text/cG93aW5hbmRyb2lk/font/5a6L5L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;&quot;&gt;&lt;br&gt;我们发现第二次退出的时候直接调用&lt;code&gt;onkeydown()&lt;/code&gt;就退出了，并没有再继续执行&lt;code&gt;dispatchTouchEvent()&lt;/code&gt;中的方法。&lt;/p&gt;
&lt;p&gt;##总结和分析&lt;br&gt;菜主把代码又重新运行了一遍，发现问题神奇的没有了。菜主被玩的稀里糊涂的，没办法，逼着自己看源码咯。这边先记一下这个问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;#参考资料：&lt;br&gt;这里的资料关于一些事件传递的解释还有我看的关于&lt;code&gt;onkeydown()&lt;/code&gt;之类方法的一个解释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;a href=&quot;http://stackoverflow.com/questions/7846050/difference-between-onkey-onkeydown-and-dispatchkeyevent-methods-provided&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;difference between onkey onkeydown and dispatchkeyevent methods&lt;/a&gt;(在著名问答网站上的一个回答，简洁的说明了onkey(),onkeydown()以及dispatchkeyevent()的简单流程)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/cwuhao/article/details/6891220&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 关于Android按键处理&lt;/a&gt;(这篇文章中也没讲多细，只是用代码演示一遍事件分发的一个工程)  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/reference/android/app/Activity.html&lt;/a&gt;(官方文档对于Activity的简介，其中包括对&lt;code&gt;dispatchKeyEvent()&lt;/code&gt;和&lt;code&gt;onkeydown()&lt;/code&gt;这两个方法的解释)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering the Android&lt;/a&gt;(这个pdf简单介绍了android系统中事件分发的一些过程和原理)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codekk.com/open-source-project-analysis/detail/Android/Trinea/%E5%85%AC%E5%85%B1%E6%8A%80%E6%9C%AF%E7%82%B9%E4%B9%8BView%20%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92&quot; title=&quot;codekk源码解析&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View 事件传递&lt;/a&gt;(这个是众所周知的Trinea大神源码解析网站上的一篇文章，虽然内容不多)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/9097463&quot; title=&quot;事件分发系列&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android事件分发机制完全解析，带你从源码的角度彻底理解(上)&lt;/a&gt;(这偏文章是一直关注的郭神出的一个系列，从源码角度对事件分发机制的解析)&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(五)</title>
    <link href="http://kikujiang.github.io/2015/03/06/notesofandroid20150306/"/>
    <id>http://kikujiang.github.io/2015/03/06/notesofandroid20150306/</id>
    <published>2015-03-06T00:54:16.000Z</published>
    <updated>2015-03-06T02:11:07.475Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;大家好，先祝大家新的一年万事如此，工资爱情节节高。昨天是我国传统的元宵节，相信大家肯定也都有自己的特别回忆吧。近两个月都没有怎么写博客，太松懈了。狠狠地批评自己一下。上班也已经一周多了，又有不少问题值得菜主记录下来，以便以后自己的开发中会用到。&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;先要来说说的就是我们在开发中需要处理线程的线程管理问题。拜读&lt;a href=&quot;http://www.trinea.cn/android/java-android-thread-pool/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java(Android)线程池&lt;/a&gt;。这篇文章主要讲解了我们开发工程中，对多线程的一个优化方法。小菜看了也只是照马画驴，简单的用到我们开发的活动中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;菜主这段时间的工作主要负责维护。没有什么特别的东西，新的一年已经悄然开始了，菜主也得振奋精神来好好工作了，这次比较少。慢慢堆了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(四)</title>
    <link href="http://kikujiang.github.io/2015/01/08/notesofandroid20150108/"/>
    <id>http://kikujiang.github.io/2015/01/08/notesofandroid20150108/</id>
    <published>2015-01-08T08:12:35.000Z</published>
    <updated>2015-01-08T09:45:24.582Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;大家好，菜主又回来了。经历了2014的洗礼，2015又匆匆而来。你是否也准备好迎接这变化多端的2015呢？新的一年，菜主发现这段时间的求知欲比较旺盛，做事也肯下功夫了，这真是个很不错的征兆呢。言归正传，这周就是春运活动结束。本来一些素材都准备的差不多了。这周直接就是向&lt;a href=&quot;http://my.csdn.net/lmj623565791&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;鸿洋大神&lt;/a&gt;学习一些自定义控件的效果了。说实话，这周的收获还是很大的。&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;首先先说工作上的东西吧，这周虽然求知欲比较旺盛，但是伴随的粗心问题也是一大堆的。第一个问题就是当webview和js进行交互的时候，在重写&lt;strong&gt;&lt;em&gt;onJsConfirm()&lt;/em&gt;&lt;/strong&gt;这个方法的时候属性时我们需要注意几点:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.在重写该方法时，要注意默认的返回值为false，表示confirm弹框不需要客户端来处理，返回值为true的时候，表示弹框完全由客户端来处理;&lt;/p&gt;
&lt;p&gt;2.需要在处理完成之后将result对象返回给js，否则的话就会导致该页面直接没反应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其次就是关于浏览器调用app的问题，菜主花了大半天。其实就是那几行配置文件的代码:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.intent.action.VIEW&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.intent.category.DEFAULT&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.intent.category.BROWSABLE&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:scheme&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;m&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:host&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;a.m &quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码就短短数行。菜主之所以不成功的原因就是因为头昏加马虎。容菜主慢慢道来,因为一开始用两个程序在测试，一个是自己写的webview嵌套的demo，另外一个就是我们的程序。因为上面这个在webview中不能跳入相关的app，菜主一开始也注意到了。但是因为下午头脑发热，把两个app搞混了，在一个中改了，却在另一个中运行，导致运行结果一直不成功。去官网也好好看了一番。而且还有一点就是，菜主犯了个愚蠢的错误，直接在浏览器中进行输入，因为浏览器中对输入的内容进行了加工，这也是导致没有成功的原因之一。虽然折腾了很久，但是菜主也着实学习了一番。&lt;/p&gt;
&lt;p&gt;接下来就是上面说的侧滑效果了。给出&lt;a href=&quot;http://www.imooc.com/learn/211&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教程地址&lt;/a&gt;。大家没事的时候也可以去慕课网上看看其他视频。其实内容不是特别的难，但是菜主从头到尾体验之后。对一些基本的用法还是掌握了不少。具体的等菜主好好整理一番。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;新的一年，有很多的事情要去做，无论是工作上，还是生活中。菜主在努力的同时要好好感谢小菜婆。这几周，除了工作上，也争取好好把自定义view学习学习。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>小波的2014</title>
    <link href="http://kikujiang.github.io/2014/12/31/overviewof2014/"/>
    <id>http://kikujiang.github.io/2014/12/31/overviewof2014/</id>
    <published>2014-12-31T02:09:25.000Z</published>
    <updated>2014-12-31T06:39:21.157Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;时间飞逝，这是菜主每次文章的御用开头。今天是2014的最后一天了，工作任务不是特别的重。菜主开始好好想想今年做了些什么事情，明年有什么菜主想干的事情。&lt;/p&gt;
&lt;h2 id=&quot;正文之总结&quot;&gt;&lt;a href=&quot;#正文之总结&quot; class=&quot;headerlink&quot; title=&quot;#正文之总结&quot;&gt;&lt;/a&gt;#正文之总结&lt;/h2&gt;&lt;p&gt;仔细想想，菜主今年确实收获了不少东西。好好罗列一下，感觉菜主今年也成长了不少。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最重要的一件事，就是菜婆回国。而且发现回国之后的菜婆更加的有魅力了。 因为之前和菜婆没有一起出去玩，菜婆也常常抱怨整天就待在一个地方，都要闷臭了。还在这个月中旬我们去了趟苏州，虽然玩的也不是特别的开心，但是好歹我们踩着2014的尾巴踏出我们旅游的第一步啦。在这里也稍稍期待一下明天的常州之行。菜婆的学业也接近尾声了，我们的两人快乐生活也要开始有模有样了，除了期待和等待，更多的是奋斗并且享受当下小小的幸福。看到菜婆战胜论文巨魔这个过程，菜主也要在自己的工作上好好努力一番了。 &lt;/li&gt;
&lt;li&gt;工作上，菜主换了新工作。在四月初的时候，离开了待了一年多的商高电子，来到了畅途网。新的同事，新的环境，当然，还有新的住处。主管人很不错，再加上这两年自己肚子里面也积累了些东西，工作做起来还是比较轻松的。再到之后的一个改版，连着将近五个月的加班生活。虽然没有多累，但是特感觉对不住菜婆，回国了也不能好好的陪她。最近一歇下来赶紧带她出去透透气。&lt;/li&gt;
&lt;li&gt;生活上，感觉今年可以算质的一年。毕竟年初的时候报名学车，菜婆那时也在日本，自己工资又不是很给力，一切都处于比较迷茫的一个时期。现在回头看看，驾照有了，工资现在还基本可以，多少可以省点下来了，菜婆也如期回到身边了。菜主也开始逐渐积攒一些自己的东西了，比如博客和文章。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然以上的都是比较积极向上的地方。菜主还是有很多细节问题需要好好的提升。比如:尽量少说多听，尽量说前先思考，尽可能多多为生活制造乐趣，更加的爱菜婆等等。在工作上面，因为菜主明年也会是工作的第三个年头了，应该考虑考虑一下自己的一个职业生涯的规划以及整理一些自己比较常用的东西。&lt;/p&gt;
&lt;h2 id=&quot;正文之计划&quot;&gt;&lt;a href=&quot;#正文之计划&quot; class=&quot;headerlink&quot; title=&quot;#正文之计划&quot;&gt;&lt;/a&gt;#正文之计划&lt;/h2&gt;&lt;p&gt;在写计划之前呢，菜主还是要大力的感谢我们家的菜婆。因为在菜婆的领导下，菜主现在对计划的执行是越来越给力了。不像之前的菜主总是说一套做一套那样。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一点当然是坚决支持菜婆的工作和选择，选择一个贴心的小窝住下来。菜婆论文肯定没问题，最好可以考上公务员，过着朝九晚五的日子。这样菜主就可以和菜婆慢慢享受生活的种种乐趣了。&lt;/li&gt;
&lt;li&gt;工作上，菜主可能还要经历工作变动。菜主计划新的一年在博客上稍微花点功夫，对Android中的一些工具类和比较好的框架进行研究和解析。工作中的职务也开始往统筹文档的方面慢慢转。对Android Studio这个工具的使用,得好好研究一下。 菜主准备在业务时间自己搞个小的app放到github上，也算自己搞Android这几年的一个集锦吧。&lt;/li&gt;
&lt;li&gt;生活上，首先绝对就是一定要在2015年去日本北海道游玩一次。虽然菜主是个典型的宅男，但这几年发现，世界真的很大很奇妙，得趁着年轻多出去转转。还有就是身体的锻炼，至少得把现在的这个小肚子给彻底铲除了。在做菜方面，菜主也要多学一点特色菜。总而言之，内外兼修。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在菜主越来越发现，身体是我们最重要的资本。各位同学在工作学习的同时千万不要忘了锻炼身体哦。&lt;/p&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;巴拉巴拉这么久，比自己写工作年终总结的时候还来劲。本命年即将过去，菜主也越发的成熟稳重，唯独技术上面还是欠缺了少许。祝各位元旦快乐，大吉大利。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      对2014生活和工作上的一个记录和思考
    
    </summary>
    
      <category term="回忆和思考" scheme="http://kikujiang.github.io/categories/%E5%9B%9E%E5%BF%86%E5%92%8C%E6%80%9D%E8%80%83/"/>
    
    
      <category term="2014" scheme="http://kikujiang.github.io/tags/2014/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(三)</title>
    <link href="http://kikujiang.github.io/2014/12/23/notesofandroid20141223/"/>
    <id>http://kikujiang.github.io/2014/12/23/notesofandroid20141223/</id>
    <published>2014-12-23T08:22:18.000Z</published>
    <updated>2014-12-24T02:59:43.479Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;大家好，圣诞即将来临。小菜主上周去了趟苏州，果然与众不同，菜主和菜婆各自怀着自己的观点回来了。本周菜主需要做的功能是一个简单的本地webview和js方法的交互和微信分享的功能模块。因为之前没有搞过这两个模块，所以在苏州之旅时还有些许的担心。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;p&gt;因为是需求的一些东西，之前的这些要点也已经被一个员工给整理一遍，所以上手起来还是很快的。这两个东西其实都没什么太难的。先来说说webview和js交互的这个功能。大体上就是说，本地客户端要先判断用户有没有登录，如果没有登录，就跳到登录页面；登录的话就直接参加活动。&lt;br&gt;菜主就顺着人家整理好的资料，稍微改改，了解整个流程，就ok了。首先，我们需要创建一个用来接受js文件方法的接口。js中调用该接口的方法来执行相关操作。先来贴下接口的代码:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JavaScriptToMobileInterface&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	JavaScriptToMobileInterface() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * This is not called on the UI thread. Post a runnable to invoke&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * loadUrl on the UI thread.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;joinToGetCoupons&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mHandler.post(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               	Toast.makeText(getActivity(), &lt;span class=&quot;string&quot;&gt;&quot;你好，&quot;&lt;/span&gt;+ userId, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               	mWebView.loadUrl(postUrl);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接口中实现的方法就是已登录状态下参加活动的方法实现。当成功时返回到页面进行刷新。接口写好之后，我们再来看看js中的方法。我们在按钮上调用此方法来和接口进行传递数据。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        function join() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (confirm(&quot;确认领取优惠券？&quot;)) &amp;#123;     	  	window.JavaScriptToMobileInterface.joinToGetCoupons();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我们在webview的配置上调用&lt;strong&gt;&lt;em&gt;onJsConfirm&lt;/em&gt;&lt;/strong&gt;方法中&lt;strong&gt;&lt;em&gt;result.confirm()&lt;/em&gt;&lt;/strong&gt;来调用。继续看代码:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyWebChromeClient&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebChromeClient&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onJsConfirm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; WebView view, String url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String message, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; JsResult result)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	Builder builder=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Builder(getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	builder.setTitle(&lt;span class=&quot;string&quot;&gt;&quot;提示&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(userId))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setMessage(&lt;span class=&quot;string&quot;&gt;&quot;您还未登录，请先登录&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setPositiveButton(android.R.string.ok, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				Intent loginIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(),LoginActivity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				startActivity(loginIntent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				result.cancel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setNeutralButton(android.R.string.cancel, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				result.cancel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setMessage(message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setPositiveButton(android.R.string.ok, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				result.confirm();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		builder.setNeutralButton(android.R.string.cancel, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        				result.cancel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	builder.setCancelable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	builder.create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	builder.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onJsAlert&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WebView view, String url, String message, JsResult result)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.confirm();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，webview调用js的方法基本就搞定了。因为demo的界面实在是太丑，所以菜主就不展示了。&lt;/p&gt;
&lt;p&gt;下面就到微信分享了，简单说明下吧。微信分享中以下几个地方需要注意一下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先就是必须在包:微信上声明的包名+.wxapi下创建WXEntryActivity这个文件。这里面有微信回调回来的接受。记住要在配置文件中标明哦，菜主就犯过这种错误。&lt;/li&gt;
&lt;li&gt;在WXEntryActivity中，我们不需要这个界面就直接finish掉就好了。&lt;/li&gt;
&lt;li&gt;微信的测试必须要打包，并且签名需要和注册的同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;最后吐槽下微信的文档，真是太简单了，很多东西都看不到，略显郁闷。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(二)</title>
    <link href="http://kikujiang.github.io/2014/11/28/notesofandroid20141128/"/>
    <id>http://kikujiang.github.io/2014/11/28/notesofandroid20141128/</id>
    <published>2014-11-28T09:28:51.000Z</published>
    <updated>2014-12-01T08:43:12.280Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;大家好，菜主又回来了。这两周项目忙着上线，有点小忙。这两天抽空看了&lt;a href=&quot;http://stormzhang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stormzhang大神&lt;/a&gt;分享的一些文章，也开始慢慢着手进行Android studio这款开发软件的学习。毕竟，好的东西也还是要多多学习的。不说废话了，记录一下这周的遇到一些有帮助的东西。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先先来讲讲看到的一个缓存工具类&lt;strong&gt;&lt;em&gt;ASimpleCache&lt;/em&gt;&lt;/strong&gt;,我们一般开发Android程序，对缓存的用到还是很多的。之前项目中确实也用到的是&lt;strong&gt;&lt;em&gt;SharePreference&lt;/em&gt;&lt;/strong&gt;。配置的时候确实只是配置了一些基本类型的数据。看了这个开源工具类之后，发现着实很好用。俗话说的好:好记性不如烂笔头，遂将其记录下来。方便以后自己项目中用到，直接集成使用。给个&lt;strong&gt;&lt;em&gt;github&lt;/em&gt;&lt;/strong&gt;上面的梯子:&lt;a href=&quot;https://github.com/yangfuhai/ASimpleCache&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ASimpleCache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;接下来来讲一下项目中遇到一个dialog中设置返回事件无效的代码。一般来说，我们通常会使用的方法是&lt;strong&gt;&lt;em&gt;setCancelable()&lt;/em&gt;&lt;/strong&gt;这个方法。但是我在使用的时候，尝试使用了另外两个方法来代替这个效果，结果确实也是成功，不过感觉代码有点多。菜主使用的是&lt;strong&gt;&lt;em&gt;setCanceledOnTouchOutside()&lt;/em&gt;&lt;/strong&gt;这个方法以及重写&lt;strong&gt;&lt;em&gt;OnKeyListener&lt;/em&gt;&lt;/strong&gt;这个接口来实现。代码如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chooseDialog.setCanceledOnTouchOutside(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chooseDialog.setOnKeyListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnKeyListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onKey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (keyCode == KeyEvent.KEYCODE_BACK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;amp;&amp;amp; event.getRepeatCount() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;菜主在项目中今天又遇到一个问题，问题是在改变文本内容的时候，当文本的内容不为空时，我可以点击按钮。在大部分的手机上面测试都没有遇到问题。但是在米3上确发现明显的不对。是这样的我再重写&lt;strong&gt;&lt;em&gt;afterTextChanged(Editable s)&lt;/em&gt;&lt;/strong&gt;这个方法的时候，需要判断这个&lt;strong&gt;&lt;em&gt;s&lt;/em&gt;&lt;/strong&gt;是否和我指定的一个&lt;strong&gt;&lt;em&gt;Edittext&lt;/em&gt;&lt;/strong&gt;控件相同，后来发现必须使用&lt;strong&gt;&lt;em&gt;toString().trim()&lt;/em&gt;&lt;/strong&gt;这样才能使它们完全相等。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;还有一个问题，就是在我是用&lt;strong&gt;&lt;em&gt;CheckBox&lt;/em&gt;&lt;/strong&gt;的时候，在配置文件中设置&lt;strong&gt;&lt;em&gt;Button&lt;/em&gt;&lt;/strong&gt;为指定的图片时，会出现显示不全的情况，后来发现改成&lt;strong&gt;&lt;em&gt;Backgroud&lt;/em&gt;&lt;/strong&gt;之后问题就迎刃而解了。&lt;/p&gt;
&lt;p&gt; Ps:东西不多，慢慢积累。现在天冷了，大家也要注意多多添加衣服哦&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>那些事，那些人(一)</title>
    <link href="http://kikujiang.github.io/2014/11/20/notes20141120/"/>
    <id>http://kikujiang.github.io/2014/11/20/notes20141120/</id>
    <published>2014-11-19T16:00:00.000Z</published>
    <updated>2014-11-20T07:10:01.741Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;11月20日，每天都会有各种各样的事情发生。我不是一个容易坚持的人，但是总归有想法这个出发点总归是好的，坚持在于每一天的督促和自觉。现在的自己紧跟着时代的潮流，特别是在浮躁这个方面。基本上每过一小段时间都会出现一些很浮躁的情绪，自己一些坚持好的习惯都会受到影响。&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;p&gt;可能因为自己是搞技术的，基本上的生活就是两点:公司和租的房子。语言能力也是极其有限。所以就随便写写了，发现微信的公共号确实是个挺不错的功能，方便了许多的懒于做自己app的大小团体。本人的也有个微信公众号，但是当时因为有不少的兴趣，大概一个多月之后就放在那边了。因为发现有很多专门题材的公众号效果。最近准备自己好好积累积累自己遇到的一些事，一些人。生活大部分的时候都是很无聊的，这个所谓的无聊其实就是无所事事，找不到存在的“意义”。这点菜主还是解决的很不错，每一天都是美好的一天，每一天都可以学到东西，有着自己小小的憧憬。渐入冬天，菜主也快奔三了。但是感觉人生经历的太少太少，还有很多东西没有去好好学学，好好看看，好好玩玩。所以，我们的生活中应该多多的给自己灌输一些正能量。菜主偶然看到以前自己写的小笔记，那时候还是12年的秋天，刚离开中软，没有找到工作，菜主可是相当的迷茫啊。多亏了菜婆的及时出现，菜主感觉人生一下子充满阳光了。接着就是加班紧凑的一年半，菜主虽然很菜，但是有点慢慢了解攻城狮这个职业并且带着自己的一些热情去接触和理解它。一开始的菜主，遇到问题，首先去百度，如果不行，过个二十多分钟就慌了。每次都去磨我的上司A哥。A哥虽然脾气不是特别好，但是很是帮助我这个职场的程序小菜鸟，在他的带领下，提高了真的不是一点半点。现在的公司还是比较安逸的，明年菜主应该就会找个地方定下来，好期待呢！！!毕竟家的感觉还是很温馨的。羡慕国外那些身体很棒，编程很牛的大师，在工作的同时也得要保护和调节身体的机能。&lt;/p&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;今天第一篇就这样吧，菜主以后会多多写写其他一些东西，以便自己以后回来看看的时候能够重温此时的心情和状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ps:菜主现在的状态处于无尽的改bug之中，好期待十二月份可以好好休息啊&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      那些事，那些人
    
    </summary>
    
      <category term="生活体会" scheme="http://kikujiang.github.io/categories/%E7%94%9F%E6%B4%BB%E4%BD%93%E4%BC%9A/"/>
    
    
      <category term="生活随笔" scheme="http://kikujiang.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Android的笔记积累(一)</title>
    <link href="http://kikujiang.github.io/2014/11/18/notesofandroid20141118/"/>
    <id>http://kikujiang.github.io/2014/11/18/notesofandroid20141118/</id>
    <published>2014-11-18T09:09:09.000Z</published>
    <updated>2014-11-18T10:50:35.119Z</updated>
    
    <content type="html">&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;p&gt;这个系列用来记录工作中遇到的一些问题和解决方案。今天遇到个问题，问题是这样的:现在我们的应用要采用两次退出程序的方法。本来这不是什么大问题的，但是有点菜主没有注意到。就是我们项目中还是用到以前的&lt;strong&gt;activitygroup&lt;/strong&gt;里面放&lt;strong&gt;tabhost&lt;/strong&gt;。还是先看activity中的用法，基本上现在都是这么做的。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCode, KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (keyCode == KeyEvent.KEYCODE_BACK&amp;amp;&amp;amp; event.getAction() == KeyEvent.ACTION_DOWN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((System.currentTimeMillis() - exitTime) &amp;gt; &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;再按一次退出程序&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		exitTime = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onKeyDown(keyCode, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开始菜主看了大家都用这个方法，遂果断采用，但是发现没有什么效果。后来响了一下，是不是应该放在事件的分发中更有效果呢？试了一下，果然如此，而且，换成activity同样有效。下面是代码:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchKeyEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.getKeyCode() == KeyEvent.KEYCODE_BACK&amp;amp;&amp;amp; event.getAction() == KeyEvent.ACTION_DOWN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((System.currentTimeMillis() - exitTime) &amp;gt; &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;再按一次退出程序&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		exitTime = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.dispatchKeyEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;特此记录，方便大家以后遇到类似的问题。菜主的tab栏还在准备中…额，一不小心说漏嘴了…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于Android开发过程中的点点滴滴
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Notes" scheme="http://kikujiang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>LitePal框架学习</title>
    <link href="http://kikujiang.github.io/2014/10/30/database-2014-10-30/"/>
    <id>http://kikujiang.github.io/2014/10/30/database-2014-10-30/</id>
    <published>2014-10-30T09:27:07.000Z</published>
    <updated>2014-11-07T07:38:20.300Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;#前言&quot;&gt;&lt;/a&gt;#前言&lt;/h2&gt;&lt;p&gt;前段日子，从&lt;a href=&quot;http://blog.csdn.net/sinyu890807/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;郭神&lt;/a&gt;的博客上看到了一个很不错的数据库框架。去&lt;a href=&quot;https://github.com/LitePalFramework/LitePal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;上仔细的瞧了一番，该框架采用了ORM模式，发现这个配置文件直接使用到实体类中的方法，比起&lt;em&gt;Google&lt;/em&gt;官网给出的确实方便了许多。具体关于一些基本数据库的方法操作，官网的一些方法说明也着实的详细。写了个简单的数据库小例子，就是把增删改查做了一些简单的处理。简单的列一下数据库的操作方法。主要用到的就是&lt;em&gt;SQLiteDatabase&lt;/em&gt;、&lt;em&gt;ContentValues&lt;/em&gt;和&lt;em&gt;Cursor&lt;/em&gt;这三个类处理相关的数据操作。依菜主的理解，&lt;em&gt;Litepal&lt;/em&gt;这个框架集成了上述的类的操作功能，将这些繁琐的操作做了较好的集成处理。不说废话了，因为只是菜主自己的小demo，可能一些性能优化没有考虑全面，希望大神们可以多多指教。&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;#正文&quot;&gt;&lt;/a&gt;#正文&lt;/h2&gt;&lt;h2 id=&quot;普通方式&quot;&gt;&lt;a href=&quot;#普通方式&quot; class=&quot;headerlink&quot; title=&quot;###普通方式&quot;&gt;&lt;/a&gt;###普通方式&lt;/h2&gt;&lt;p&gt;一般在数据库中，我们一般会这么进行建表:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TTSDBHelper&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SQLiteOpenHelper&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String TTS_DATABASE_NAME = &lt;span class=&quot;string&quot;&gt;&quot;powinandroid.db&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; TTS_DATABASE_VERSION = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TTSDBHelper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(context, TTS_DATABASE_NAME, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, TTS_DATABASE_VERSION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SQLiteDatabase db)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		db.execSQL(&lt;span class=&quot;string&quot;&gt;&quot;CREATE TABLE IF NOT EXISTS &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.TEST_TABLE_NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ &lt;span class=&quot;string&quot;&gt;&quot;(_id INTEGER PRIMARY KEY AUTOINCREMENT, &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.TESTID + &lt;span class=&quot;string&quot;&gt;&quot; INTEGER, &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.TESTNAME + &lt;span class=&quot;string&quot;&gt;&quot; TEXT, &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.TESTSEX + &lt;span class=&quot;string&quot;&gt;&quot; TEXT, &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.TESTCAREER + &lt;span class=&quot;string&quot;&gt;&quot; TEXT, &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ TestEntity.CREATETIME + &lt;span class=&quot;string&quot;&gt;&quot; TEXT&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onUpgrade&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SQLiteDatabase db, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; newVersion)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		db.execSQL(&lt;span class=&quot;string&quot;&gt;&quot;DROP TABLE IF EXISTS&quot;&lt;/span&gt; + TestEntity.TEST_TABLE_NAME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		onCreate(db);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;表建好之后，就开始来写增删查改的方法。下面就是插入一条数据的方法:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;insertTestEntity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestEntity test)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; successFlag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isInsertSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.beginTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Cursor maxIdCursor = db.rawQuery(&lt;span class=&quot;string&quot;&gt;&quot;SELECT MAX(_id) FROM &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						+ TestEntity.TEST_TABLE_NAME, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (maxIdCursor.moveToNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				test.setTestId(maxIdCursor.getInt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ContentValues insertData = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentValues();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			insertData.put(TestEntity.TESTID, test.getTestId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			insertData.put(TestEntity.TESTNAME, test.getTestName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			insertData.put(TestEntity.TESTSEX, test.getTestSex());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			insertData.put(TestEntity.TESTCAREER, test.getTestCareer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			insertData.put(TestEntity.CREATETIME, test.getCreateTime());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			successFlag = db.insert(TestEntity.TEST_TABLE_NAME, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					insertData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.setTransactionSuccessful();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.endTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (successFlag &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isInsertSuccess = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isInsertSuccess = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isInsertSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于文章中一些问题的探讨，欢迎大家加我QQ群&lt;strong&gt;&lt;em&gt;344590286&lt;/em&gt;&lt;/strong&gt;。大家一起好好讨论讨论。我们继续，插入完成之后，就是更新数据了。这次菜主采用的自建一个&lt;em&gt;TESTID&lt;/em&gt;属性。这个属性是通过数据库本身自增长&lt;em&gt;_id&lt;/em&gt;来进行赋值的。在更新的过程中，我都是通过&lt;em&gt;TESTID&lt;/em&gt;将我的数据进行更新。菜主继续贴代码了:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateTestEntity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestEntity test)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; successFlag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isUpdateSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.beginTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ContentValues updateData = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentValues();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			updateData.put(TestEntity.TESTNAME, test.getTestName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			updateData.put(TestEntity.TESTSEX, test.getTestSex());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			updateData.put(TestEntity.TESTCAREER, test.getTestCareer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			updateData.put(TestEntity.CREATETIME, test.getCreateTime());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			successFlag = db.update(TestEntity.TEST_TABLE_NAME, updateData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			TestEntity.TESTID +&lt;span class=&quot;string&quot;&gt;&quot; = &quot;&lt;/span&gt;+test.getTestId(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;									&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.setTransactionSuccessful();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.endTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (successFlag &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isUpdateSuccess = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isUpdateSuccess = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isUpdateSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其实这些方法挺简单易懂的，但是每次写起来的话步骤都不能少。当然有困惑的时候，我们可以积极参考文档，来对一些知识进行学习和研究。前几天，菜主纠结了&lt;em&gt;rawQuery()&lt;/em&gt;和&lt;em&gt;query()&lt;/em&gt;这两个方法的区别在哪。如果是&lt;em&gt;SQL&lt;/em&gt;语句的能力还不错的话，建议使用&lt;em&gt;rawQuery()&lt;/em&gt;这个方法。因为&lt;em&gt;query()&lt;/em&gt;这个方法归根结底还是转成&lt;em&gt;SQL&lt;/em&gt;语句执行。我们继续来看看删除的方法:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deleteTestEntity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; testId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; successFlag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isDeleteSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.beginTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(testId)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				successFlag = db.delete(TestEntity.TEST_TABLE_NAME, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				successFlag = db.delete(TestEntity.TEST_TABLE_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						TestEntity.TESTID + &lt;span class=&quot;string&quot;&gt;&quot; = &quot;&lt;/span&gt; + testId, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.setTransactionSuccessful();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			db.endTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (successFlag &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isDeleteSuccess = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				isDeleteSuccess = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isDeleteSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如上面说的，菜主都是根据这个&lt;em&gt;TESTID&lt;/em&gt;属性来进行操作数据的。因为一开始的疏忽，本来在查询中也根据这个属性。结果，就出了问题，提示没有&lt;em&gt;TESTID&lt;/em&gt;这一栏。后来发现，没有数据的时候就会出现查询不到的异常，不像系统自带的&lt;em&gt;_id&lt;/em&gt;这个属性这么好用。我们继续来看:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;TestEntity&amp;gt; &lt;span class=&quot;title&quot;&gt;selectAllTestData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;TestEntity&amp;gt; testList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;TestEntity&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Cursor c = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c = db.rawQuery(&lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM &quot;&lt;/span&gt; + TestEntity.TEST_TABLE_NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				+ &lt;span class=&quot;string&quot;&gt;&quot; ORDER BY &quot;&lt;/span&gt;+TestEntity.TESTID+&lt;span class=&quot;string&quot;&gt;&quot; DESC&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (c.moveToNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			TestEntity history = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TestEntity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			history.setTestId(c.getInt(c.getColumnIndex(TestEntity.TESTID)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			history.setTestName(c.getString(c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.getColumnIndex(TestEntity.TESTNAME)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			history.setTestSex(c.getString(c.getColumnIndex(TestEntity.TESTSEX)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			history.setTestCareer(c.getString(c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.getColumnIndex(TestEntity.TESTCAREER)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			history.setCreateTime(c.getString(c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.getColumnIndex(TestEntity.CREATETIME)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			testList.add(history);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看官们是否看累了?我们这里就把正常的增删改查方法给列出来了。&lt;/p&gt;
&lt;h2 id=&quot;Litepal框架&quot;&gt;&lt;a href=&quot;#Litepal框架&quot; class=&quot;headerlink&quot; title=&quot;###Litepal框架&quot;&gt;&lt;/a&gt;###Litepal框架&lt;/h2&gt;&lt;p&gt;在说这个框架之前，菜主首先先推荐一下郭大神的这个框架系列的传送门:&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/38083103&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android数据库高手秘籍(零)——前言&lt;/a&gt;。大神的这个系列对数据库的一些更新操作以及一些联表操作等都做了详细的描述。当然，之前菜主使用&lt;em&gt;TESTID&lt;/em&gt;属性作为自增对象的id，在这个框架中是不需要的。因为框架默认是自增的。因为会用到根据自增长id来更新或者删除数据，所以，我们在建表的对象时，最好加一个id的属性，方便我们以后程序中的操作。给个&lt;em&gt;Litepal&lt;/em&gt;框架的地址供大家学习:&lt;a href=&quot;https://github.com/LitePalFramework/LitePal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LitePal for Android&lt;/a&gt;。同样的方法，我们直接来看一下这个框架下的增删查改方法:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 插入一个对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; insertData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestEntity insertData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		insertData.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 删除一个对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; deleteData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestEntity deleteData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		deleteData.delete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 查询所有的对象数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; List&amp;lt;TestEntity&amp;gt; &lt;span class=&quot;title&quot;&gt;selectAllData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;TestEntity&amp;gt; dataList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;TestEntity&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dataList = DataSupport.findAll(TestEntity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 更新一个对象	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; updateData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestEntity updateData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		updateData.update(updateData.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是不是比之前的方法省了很多的工作。关于一些具体的配置，菜主这里就不多说了。这个框架目前菜主用的很舒服。复杂一点的逻辑操作，大神的系列讲解的很到位，我就不班门弄斧了。&lt;/p&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;#结尾&quot;&gt;&lt;/a&gt;#结尾&lt;/h2&gt;&lt;p&gt;这次讲解，菜主没有过多的深挖，主要到目前为主，菜主在android上遇到的一些数据库的知识都是比较基本的。菜主自己也没有在这方面过多的深入研究。下周菜主好好的研究一下我们平常用的底部栏。因为目前项目中都是采用的&lt;em&gt;TabHost&lt;/em&gt;。下周好好来看看这个底部栏。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于Android开发中一种数据库框架LitePal
    
    </summary>
    
      <category term="Android" scheme="http://kikujiang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://kikujiang.github.io/tags/Android/"/>
    
      <category term="Database" scheme="http://kikujiang.github.io/tags/Database/"/>
    
      <category term="Sqlite" scheme="http://kikujiang.github.io/tags/Sqlite/"/>
    
  </entry>
  
</feed>
